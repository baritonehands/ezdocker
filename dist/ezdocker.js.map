{"version":3,"sources":["ezdocker.js"],"names":[],"mappings":"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","file":"ezdocker.js","sourcesContent":["import _ from 'lodash';\nimport Docker from 'dockerode';\nimport stream from 'stream';\nimport chalk from 'chalk';\nimport { argv } from 'yargs';\nimport TarUtils from './tar-utils';\n\nclass ImageBuilder {\n\n  constructor(ezdocker) {\n    this._repo = undefined;\n    this._tag = undefined;\n    this._paths = {};\n    this._ezdocker = ezdocker;\n  }\n\n  repository(repo) {\n    this._repo = repo;\n    return this;\n  }\n\n  tag(tag) {\n    this._tag = tag;\n    return this;\n  }\n\n  addPath(src, dest) {\n    this._paths[src] = dest || '.';\n    return this;\n  }\n\n  getFullTag() {\n    return this._repo + ':' + this._tag;\n  }\n\n  build() {\n    return this._ezdocker.buildImage(this);\n  }\n}\n\nclass EZDocker {\n\n  static createFromArgs() {\n    return new EZDocker(argv.docker);\n  }\n\n  constructor(connectionOpts, docker, tarUtils = new TarUtils()) {\n    this._docker = docker || new Docker(connectionOpts);\n    this._tarUtils = tarUtils;\n  }\n\n  imageBuilder() {\n    return new ImageBuilder(this);\n  }\n\n  buildImage(imageBuilder) {\n    return this._tarUtils.all(imageBuilder._paths)\n      .then((stream) => {\n        return new Promise((resolve, reject) => {\n          this._docker.buildImage(stream, {t: imageBuilder.getFullTag()}, (error, response) => {\n            if (error) {\n              reject(error);\n            } else {\n              response.pipe(stream_parser);\n              response.on('end', () => {\n                resolve();\n              });\n            }\n          });\n        });\n      });\n  }\n\n  removeImages(repository) {\n    return this.listImages(repository)\n      .then((images) => {\n        return Promise.all(_.map(images, (imageInfo) => {\n          return this.removeImage(imageInfo.Id);\n        }));\n      });\n  }\n\n  listImages(repository) {\n    return new Promise((resolve, reject) => {\n      this._docker.listImages({filter: repository}, (error, response) => {\n        if (error) {\n          Log.error('Listing Docker Images Failed: ' + error.message);\n          reject(error);\n        } else {\n          resolve(response);\n        }\n      });\n    });\n  }\n\n  removeImage(id) {\n    return new Promise((resolve, reject) => {\n      this._docker.getImage(id).remove({}, (error, response) => {\n        if (error) {\n          if (error.statusCode == 404) {\n            Log.info('No docker images to remove.');\n          } else {\n            Log.error('Removing Docker Image Failed: ' + error.message);\n            reject(error);\n          }\n        } else {\n          Log.info('Removing Image ' + id);\n          _.forEach(response, (step) => {\n            _.forEach(step, (target, action) => {\n              Log.info('  ' + action + ' ' + target);\n            });\n          });\n          resolve();\n        }\n      });\n    });\n  };\n\n  pushImages(repository) {\n    return new Promise((resolve, reject) => {\n      this._docker.getImage(repository).push({}, (error, response) => {\n        if (error) {\n          Log.error('Pushing Docker Image(s) Failed: ' + error.message);\n          reject(error);\n        } else {\n          response.pipe(stream_parser);\n          response.on('end', () => {\n            resolve();\n          });\n        }\n      });\n    });\n  }\n}\n\nconst stream_parser = new stream.Writable({\n  write: function (chunk, encoding, next) {\n    var data = JSON.parse(chunk.toString());\n\n    if (data.stream) {\n      data.stream = data.stream.replace(/\\n$/, '');\n      Log.info(data.stream);\n    } else {\n      Log.info(chalk.blue('RAW: ') + JSON.stringify(data));\n    }\n\n    next();\n  }\n});\n\nclass Log {\n\n  static info(msg) {\n    Log.log(chalk.blue('(Docker) ') + msg);\n  }\n\n  static error(msg) {\n    Log.log(chalk.red('(Docker) ' + msg));\n  }\n\n  static log(msg) {\n    let date = new Date();\n    let time = `${Log.pad(date.getHours())}:${Log.pad(date.getMinutes())}:${Log.pad(date.getSeconds())}`;\n    console.log(`[${chalk.gray(time)}] ${msg}`);\n  }\n\n  static pad(num, digits = 2) {\n    let s = `${num}`;\n    while (s.length < digits) {\n      s = '0' + s;\n    }\n    return s;\n  }\n}\n\n/* TODO: Figure out how to do this with a proper ES6 export */\nexport default EZDocker;"],"sourceRoot":"/source/"}